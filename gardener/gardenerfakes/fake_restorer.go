// This file was generated by counterfeiter
package gardenerfakes

import (
	"sync"

	"code.cloudfoundry.org/guardian/gardener"
	"code.cloudfoundry.org/lager"
)

type FakeRestorer struct {
	RestoreStub        func(logger lager.Logger, handles []string) []string
	restoreMutex       sync.RWMutex
	restoreArgsForCall []struct {
		logger  lager.Logger
		handles []string
	}
	restoreReturns struct {
		result1 []string
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeRestorer) Restore(logger lager.Logger, handles []string) []string {
	var handlesCopy []string
	if handles != nil {
		handlesCopy = make([]string, len(handles))
		copy(handlesCopy, handles)
	}
	fake.restoreMutex.Lock()
	fake.restoreArgsForCall = append(fake.restoreArgsForCall, struct {
		logger  lager.Logger
		handles []string
	}{logger, handlesCopy})
	fake.recordInvocation("Restore", []interface{}{logger, handlesCopy})
	fake.restoreMutex.Unlock()
	if fake.RestoreStub != nil {
		return fake.RestoreStub(logger, handles)
	}
	return fake.restoreReturns.result1
}

func (fake *FakeRestorer) RestoreCallCount() int {
	fake.restoreMutex.RLock()
	defer fake.restoreMutex.RUnlock()
	return len(fake.restoreArgsForCall)
}

func (fake *FakeRestorer) RestoreArgsForCall(i int) (lager.Logger, []string) {
	fake.restoreMutex.RLock()
	defer fake.restoreMutex.RUnlock()
	return fake.restoreArgsForCall[i].logger, fake.restoreArgsForCall[i].handles
}

func (fake *FakeRestorer) RestoreReturns(result1 []string) {
	fake.RestoreStub = nil
	fake.restoreReturns = struct {
		result1 []string
	}{result1}
}

func (fake *FakeRestorer) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.restoreMutex.RLock()
	defer fake.restoreMutex.RUnlock()
	return fake.invocations
}

func (fake *FakeRestorer) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ gardener.Restorer = new(FakeRestorer)
